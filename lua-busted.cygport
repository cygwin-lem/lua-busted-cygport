NAME="lua-busted"
VERSION=2.0.0
RELEASE=1
CATEGORY="Lua"
SUMMARY="Elegant Lua unit testing"
DESCRIPTION="\
An elegant, extensible, testing framework.
Ships with a large amount of useful asserts,
plus the ability to write your own. Output
in pretty or plain terminal format, JSON,
or TAP for CI integration. Great for TDD
and unit, integration, and functional tests.
"
HOMEPAGE="https://github.com/Olivine-Labs/busted/"

GIT_REPO="https://github.com/Olivine-Labs/busted"
declare -A GIT_DATEHASH_BY_NAME=(
  # git log --date=iso-strict --format='%cd/%H' -1
  [2.0.0]=2019-06-28T14:50:36-04:00/v2.0.0
)
REV_HASH="${GIT_DATEHASH_BY_NAME[${VERSION}]#*/}"
REV_DATE="${GIT_DATEHASH_BY_NAME[${VERSION}]%/*}"
REV_DATE_SHORT="${REV_DATE%%T*}"
GIT_BASENAME="${GIT_REPO##*/}"
SRC_URI="${GIT_REPO}/archive/${REV_HASH}/${GIT_BASENAME}-${VERSION}.tar.gz"
SRC_DIR="${GIT_BASENAME}-${REV_HASH#v}"

ARCH="noarch"

################################
LUA_VERSIONS="5.1:5.2:5.3:5.4"
LUA_PKG_NAME="busted"
source lua.experiment

################################
## Patch files
################################
# Patch filenames are in a default style of 'git format-patch'
PATCH_URI=$(\
  find -maxdepth 1 -type f -name '[0-9][0-9][0-9][0-9]-*.patch' \
  | sort \
)
# Additional patches, if any
PATCH_URI+="
"

################################
## Requirements for building
################################
BUILD_REQUIRES="\
  lua51-devel lua51-cliargs lua51-dkjson lua51-luassert lua51-mediator lua51-pl lua51-say lua51-system lua51-term\
  lua52-devel lua52-cliargs lua52-dkjson lua52-luassert lua52-mediator lua52-pl lua52-say lua52-system lua52-term\
  lua53-devel lua53-cliargs lua53-dkjson lua53-luassert lua53-mediator lua53-pl lua53-say lua53-system lua53-term\
  lua54-devel lua54-cliargs lua54-dkjson lua54-luassert lua54-mediator lua54-pl lua54-say lua54-system lua54-term\
"
# TEST_REQUIRES="\
# "

################################
ABI=0


################################
_CYGPORT_RESTRICT_postinst_doc_=1

set_packages_lua() {
  __add_pkg "lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}"
  __set_pkg_property . CONTENTS "
    usr/share/doc/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}/
    usr/*/lua/${LUA_VERSION}/
  "
  __set_pkg_property . REQUIRES "lua${LUA_VERSION_CYG}"

  __append_pkg_property . CONTENTS "
    usr/bin/*-${LUA_VERSION}
    etc/p*/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh
  "
}

set_packages_lua_versions ${LUA_VERSIONS} ${LUA_PKG_NAME}

################################
src_compile_lua() {
  mkdir -p ${B}/${LUA_VERSION}
  cd  ${B}/${LUA_VERSION}

  lndirs ${S} .

  lua_fix_shebang_version_print ${LUA_VERSION} bin/busted > bin/busted-${LUA_VERSION}
  chmod 755 bin/busted-${LUA_VERSION}
}

################################
src_install_lua() {
  cd ${B}/${LUA_VERSION}

  __doinsdir busted ${LUA_SCRIPTDIR}/${LUA_PKG_NAME}
  insinto ${LUA_SCRIPTDIR}
  doins busted.lua

  dobin bin/busted-${LUA_VERSION}

  dodoc LICENSE *.md rockspecs/busted-${VERSION}-*.rockspec

  # postinstall/preremove scripts setting alternatives
  local POSTINSTALL=./postinstall/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh
  local PREREMOVE=./preremove/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh

  mkdir -p ./postinstall
  mkdir -p ./preremove

  __script_postinstall_lua ${LUA_VERSION} ${LUA_PKG_NAME} <<_EOF > ${POSTINSTALL}
--slave /usr/bin/busted busted /usr/bin/busted-\${LUA_VERSION} \\
_EOF
  __script_preremove_lua ${LUA_VERSION} ${LUA_PKG_NAME} > ${PREREMOVE}

  insinto /etc/postinstall
  doins ${POSTINSTALL}
  insinto /etc/preremove
  doins ${PREREMOVE}
}

################################
src_test_lua() {
  cd ${B}/${LUA_VERSION}

  echo "No test suite."
}

################################
